name: CI

on:
  push:
  pull_request:
  repository_dispatch:


jobs:


  some-context-vars:
    runs-on: ubuntu-latest
    steps:
      - name: Some vars
        run: |
          echo Echoing:
          echo 'github.event.action   :' ${{ github.event.action }}
          echo 'github.event_name     :' ${{ github.event_name }}
          echo 'github.repository     :' ${{ github.repository }}
          echo 'github.sha            :' ${{ github.sha }}
          echo 'branch or version from GITHUB_REF:' ${{ steps.get-bv_name.outputs.branch_or_version }}
          echo 'GITHUB_REF            :' ${GITHUB_REF}
          echo 'GITHUB_REF#refs/heads/:' ${GITHUB_REF#refs/heads/}
          echo 'GITHUB_REF#refs/tags/ :' ${GITHUB_REF#refs/tags/}


  on-pull_request-job:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - run: echo 'github.event_name is:' ${{ github.event_name }}


  on-push-job:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - run: echo 'github.event_name is:' ${{ github.event_name }}


  on-repository_dispatch-job:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo 'github.event_name   is:' ${{ github.event_name }}
          echo 'github.event.action is:' ${{ github.event.action }}


  use-docker-container:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # online, offline
        mode: ['online']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare jobfile
        run: |
          mkdir -p Documentation-GENERATED-temp
          if [[ "${{ matrix.mode }}" = "offline" ]]; then
            echo '{"Overrides_cfg":{"html_theme_options":{"docstypo3org":""}}}' > Documentation-GENERATED-temp/jobfile.json
          fi
          if [[ "${{ matrix.mode }}" = "online" ]]; then
            echo '{"Overrides_cfg":{"html_theme_options":{"docstypo3org":"nonempty"}}}' > Documentation-GENERATED-temp/jobfile.json
          fi
      - name: docker run
        run: |
          docker run --rm --user=$(id -u):$(id -g) \
            -v $(pwd):/PROJECT:ro \
            -v $(pwd)/Documentation-GENERATED-temp:/RESULT \
            t3docs/render-documentation makehtml \
              -c make_singlehtml 1 \
              -c jobfile /RESULT/jobfile.json
      - name: Verify rendering result
        run: stat Documentation-GENERATED-temp/Result/project/0.0.0/index.html || stat Documentation-GENERATED-temp/Result/project/0.0.0/Index.html
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: Rendering of ${{ github.event.repository.name }} (mode ${{ matrix.mode }})
          path: ./Documentation-GENERATED-temp/Result/project/0.0.0

