.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
.. php:namespace::  TYPO3\CMS\Extbase\Mvc\Web\Routing

.. php:class:: UriBuilder

   URI Builder for extbase requests.

   .. php:method:: setRequest(TYPO3\\CMS\\Extbase\\Mvc\\RequestInterface $request)

      Sets the current request

      :param TYPO3\\CMS\\Extbase\\Mvc\\RequestInterface $request: the request
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setArguments(array $arguments)

      Additional query parameters.

      If you want to "prefix" arguments, you can pass in multidimensional arrays:
      array('prefix1' => array('foo' => 'bar')) gets "&prefix1[foo]=bar"

      :param array $arguments: the arguments
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setSection(string $section)

      If specified, adds a given HTML anchor to the URI (#...)

      :param string $section: the section
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setFormat(string $format)

      Specifies the format of the target (e.g. "html" or "xml")

      :param string $format: the format
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setCreateAbsoluteUri(bool $createAbsoluteUri)

      If set, the URI is prepended with the current base URI. Defaults to FALSE.

      :param bool $createAbsoluteUri: the createAbsoluteUri
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setAbsoluteUriScheme(string $absoluteUriScheme)

      Sets the scheme that should be used for absolute URIs in FE mode

      :param string $absoluteUriScheme: the scheme to be used for absolute URIs
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setLanguage(string $language)

      Enforces a URI / link to a page to a specific language (or use "current")

      :param string $language: the language
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder

   .. php:method:: setAddQueryString(string|int|bool $addQueryString)

      If set, the current query parameters will be merged with $this->arguments in backend context.

      In frontend context, setting this property will only include mapped query arguments from the
      Page Routing. To include any - possible "unsafe" - GET parameters, the property has to be set
      to "untrusted". Defaults to FALSE.

      :param string|int|bool $addQueryString: is set to "1", "true", "0", "false" or "untrusted"
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setArgumentsToBeExcludedFromQueryString(array $argumentsToBeExcludedFromQueryString)

      A list of arguments to be excluded from the query parameters
      Only active if addQueryString is set

      :param array $argumentsToBeExcludedFromQueryString: the argumentsToBeExcludedFromQueryString
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setArgumentPrefix(string $argumentPrefix)

      Specifies the prefix to be used for all arguments.

      :param string $argumentPrefix: the argumentPrefix
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setLinkAccessRestrictedPages(bool $linkAccessRestrictedPages)

      If set, URIs for pages without access permissions will be created

      :param bool $linkAccessRestrictedPages: the linkAccessRestrictedPages
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setTargetPageUid(int $targetPageUid)

      Uid of the target page

      :param int $targetPageUid: the targetPageUid
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setTargetPageType(int $targetPageType)

      Sets the page type of the target URI. Defaults to 0

      :param int $targetPageType: the targetPageType
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: setNoCache(bool $noCache)

      by default FALSE; if TRUE, &no_cache=1 will be appended to the URI

      :param bool $noCache: the noCache
      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: reset()

      Resets all UriBuilder options to their default value

      :returntype: TYPO3\\CMS\\Extbase\\Mvc\\Web\\Routing\\UriBuilder
      :returns: static the current UriBuilder to allow method chaining

   .. php:method:: uriFor(string $actionName = NULL, array $controllerArguments = NULL, string $controllerName = NULL, string $extensionName = NULL, string $pluginName = NULL)

      Creates a URI used for linking to an Extbase action.

      Works in Frontend and Backend mode of TYPO3.

      :param string $actionName: Name of the action to be called, default: NULL
      :param array $controllerArguments: Additional query parameters. Will be "namespaced" and merged with $this->arguments., default: NULL
      :param string $controllerName: Name of the target controller. If not set, current ControllerName is used., default: NULL
      :param string $extensionName: Name of the target extension, without underscores. If not set, current ExtensionName is used., default: NULL
      :param string $pluginName: Name of the target plugin. If not set, current PluginName is used., default: NULL
      :returntype: string
      :returns: string the rendered URI

   .. php:method:: build()

      Builds the URI
      Depending on the current context this calls buildBackendUri() or buildFrontendUri()

      :returntype: string
      :returns: string The URI
