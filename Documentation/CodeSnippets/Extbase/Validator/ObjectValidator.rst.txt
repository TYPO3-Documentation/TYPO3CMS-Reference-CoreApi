.. Generated by https://github.com/linawolf/t3docs_restructured_api_tools 
.. Extracted from EXT:blog_example/Classes/Domain/Validator/BlogValidator.php

.. code-block:: php
   :caption: EXT:blog_example/Classes/Domain/Validator/BlogValidator.php

   use FriendsOfTYPO3\BlogExample\Domain\Model\Blog;
   use TYPO3\CMS\Extbase\Utility\LocalizationUtility;
   
   final class BlogValidator extends AbstractValidator
   {
       protected function isValid(mixed $value): void
       {
           if (!$value instanceof Blog) {
               // This error can only be reached if a developer accidentally uses
               // this validator on an object that is not a Blog.
               $errorString = 'The blog validator can only handle classes '
                   . 'of type FriendsOfTYPO3\BlogExample\Domain\Validator\Blog. '
                   . $value::class . ' given instead.';
               // Add the error directly if it is about the object as a whole.
               $this->addError($errorString, 1297418975);
           }
           if ($value->getCategories()->count() > 3) {
               $errorString = LocalizationUtility::translate(
                   'error.Blog.tooManyCategories',
                   'BlogExample'
               );
               // Add the error to the property if it is specific to one property.
               $this->addErrorForProperty('categories', $errorString, 1297418976);
           }
           if (strtolower($value->getTitle()) === strtolower($value->getSubtitle())) {
               $errorString = LocalizationUtility::translate(
                   'error.Blog.invalidSubTitle',
                   'BlogExample'
               );
               // Add the error directly if it takes several properties into account.
               $this->addError($errorString, 1297418974);
           }
       }
   }
   