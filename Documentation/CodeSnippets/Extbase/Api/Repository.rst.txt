.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets 
.. php:namespace::  TYPO3\CMS\Extbase\Persistence

.. php:class:: Repository

   The base repository - will usually be extended by a more concrete repository.

   
   .. php:method:: injectPersistenceManager(TYPO3\\CMS\\Extbase\\Persistence\\PersistenceManagerInterface $persistenceManager)
   
      :param TYPO3\\CMS\\Extbase\\Persistence\\PersistenceManagerInterface $persistenceManager: the persistenceManager
      
   .. php:method:: add(object $object)
   
      Adds an object to this repository
      
      :param object $object: The object to add
      
   .. php:method:: remove(object $object)
   
      Removes an object from this repository.
      
      :param object $object: The object to remove
      
   .. php:method:: update(object $modifiedObject)
   
      Replaces an existing object with the same identifier by the given object
      
      :param object $modifiedObject: The modified object
      
   .. php:method:: findAll()
   
      Returns all objects of this repository.
      
      
   .. php:method:: countAll()
   
      Returns the total number objects of this repository.
      
      
   .. php:method:: removeAll()
   
      Removes all objects of this repository as if remove() was called for
      all of them.
      
      
   .. php:method:: findByUid(int $uid)
   
      Finds an object matching the given identifier.
      
      :param int $uid: The identifier of the object to find
      
   .. php:method:: findByIdentifier(mixed $identifier)
   
      Finds an object matching the given identifier.
      
      :param mixed $identifier: The identifier of the object to find
      
   .. php:method:: setDefaultOrderings(array $defaultOrderings)
   
      Sets the property names to order the result by per default.
      
      Expected like this:
      array(
      'foo' => \TYPO3\CMS\Extbase\Persistence\QueryInterface::ORDER_ASCENDING,
      'bar' => \TYPO3\CMS\Extbase\Persistence\QueryInterface::ORDER_DESCENDING
      )
      
      :param array $defaultOrderings: The property names to order by
      
   .. php:method:: setDefaultQuerySettings(TYPO3\\CMS\\Extbase\\Persistence\\Generic\\QuerySettingsInterface $defaultQuerySettings)
   
      Sets the default query settings to be used in this repository.
      
      A typical use case is an initializeObject() method that creates a QuerySettingsInterface
      object, configures it and sets it to be used for all queries created by the repository.
      
      Warning: Using this setter *fully overrides* native query settings created by
      QueryFactory->create(). This especially means that storagePid settings from
      configuration are not applied anymore, if not explicitly set. Make sure to apply these
      to your own QuerySettingsInterface object if needed, when using this method.
      
      :param TYPO3\\CMS\\Extbase\\Persistence\\Generic\\QuerySettingsInterface $defaultQuerySettings: the defaultQuerySettings
      
   .. php:method:: createQuery()
   
      Returns a query for objects of this repository
      
      
   .. php:method:: __call(non-empty-string $methodName, array<int,mixed> $arguments)
   
      **Deprecated:** since v12, will be removed in v14, use {@see \findBy}, {@see \findOneBy} and {@see \count} instead
      
      Dispatches magic methods (findBy[Property]())
      
      :param non-empty-string $methodName: The name of the magic method
      :param array<int,mixed> $arguments: The arguments of the magic method
      
   .. php:method:: findBy(array $criteria, array $orderBy = NULL, int $limit = NULL, int $offset = NULL)
   
      :param array $criteria: the criteria
      :param array $orderBy: the orderBy, default: NULL
      :param int $limit: the limit, default: NULL
      :param int $offset: the offset, default: NULL
      :returntype: TYPO3\\CMS\\Extbase\\Persistence\\QueryResultInterface
      
   .. php:method:: findOneBy(array $criteria, array $orderBy = NULL)
   
      :param array $criteria: the criteria
      :param array $orderBy: the orderBy, default: NULL
      :returntype: object
      
   .. php:method:: count(array $criteria)
   
      :param array $criteria: the criteria
      :returntype: int
