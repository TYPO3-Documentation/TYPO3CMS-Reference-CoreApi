..  Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
..  php:namespace::  TYPO3\CMS\Core\Cache\Backend

..  php:interface:: FreezableBackendInterface

    A contract for a cache backend which can be frozen.

    ..  php:method:: freeze()

        Freezes this cache backend.

        All data in a frozen backend remains unchanged and methods which try to add
        or modify data result in an exception thrown. Possible expiry times of
        individual cache entries are ignored.

        On the positive side, a frozen cache backend is much faster on read access.
        A frozen backend can only be thawn by calling the flush() method.

    ..  php:method:: isFrozen()
        :returns: `bool`

        Tells if this backend is frozen.

    ..  php:method:: setCache(\TYPO3\CMS\Core\Cache\Frontend\FrontendInterface $cache)

        Sets a reference to the cache frontend which uses this backend

        :param $cache: The frontend for this backend

    ..  php:method:: set(?string $entryIdentifier, ?string $data, array $tags = [], ?int $lifetime = NULL)

        Saves data in the cache.

        :param $entryIdentifier: An identifier for this specific cache entry
        :param $data: The data to be stored
        :param $tags: Tags to associate with this cache entry. If the backend does not support tags, this option can be ignored., default: []
        :param $lifetime: Lifetime of this cache entry in seconds. If NULL is specified, the default lifetime is used. "0" means unlimited lifetime., default: NULL

    ..  php:method:: get(?string $entryIdentifier)
        :returns: `mixed`

        Loads data from the cache.

        :param $entryIdentifier: An identifier which describes the cache entry to load
        :Return description: The cache entry's content as a string or FALSE if the cache entry could not be loaded

    ..  php:method:: has(?string $entryIdentifier)
        :returns: `bool`

        Checks if a cache entry with the specified identifier exists.

        :param $entryIdentifier: An identifier specifying the cache entry
        :Return description: TRUE if such an entry exists, FALSE if not

    ..  php:method:: remove(?string $entryIdentifier)
        :returns: `bool`

        Removes all cache entries matching the specified identifier.

        Usually this only affects one entry but if - for what reason ever -
        old entries for the identifier still exist, they are removed as well.

        :param $entryIdentifier: Specifies the cache entry to remove
        :Return description: TRUE if (at least) an entry could be removed or FALSE if no entry was found

    ..  php:method:: flush()

        Removes all cache entries of this cache.

    ..  php:method:: collectGarbage()

        Does garbage collection
