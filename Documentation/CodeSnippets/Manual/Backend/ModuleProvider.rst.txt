.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
.. php:namespace::  TYPO3\CMS\Backend\Module

.. php:class:: ModuleProvider

   This is the central point to retrieve modules from the ModuleRegistry, while
   performing the necessary access checks, which ModuleRegistry does not deal with.

   .. php:method:: isModuleRegistered(string $identifier)

      Simple wrapper for the registry, which just checks if a
      module is registered. Does NOT perform any access checks.

      :param string $identifier: the identifier
      :returntype: `bool`

   .. php:method:: getModule(string $identifier, TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user = NULL, bool $respectWorkspaceRestrictions = true)

      Returns a Module for the given identifier. In case a user is given, also access checks are performed.

      :param string $identifier: the identifier
      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user, default: NULL
      :param bool $respectWorkspaceRestrictions: the respectWorkspaceRestrictions, default: true
      :returntype: `TYPO3\CMS\Backend\Module\ModuleInterface`

   .. php:method:: getModules(TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user = NULL, bool $respectWorkspaceRestrictions = true, bool $grouped = true)

      Returns all modules either grouped by main modules or flat.

      In case a user is given, also access checks are performed.

      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user, default: NULL
      :param bool $respectWorkspaceRestrictions: the respectWorkspaceRestrictions, default: true
      :param bool $grouped: the grouped, default: true
      :returntype: `array`
      :returns: \ModuleInterface[]

   .. php:method:: getModuleForMenu(string $identifier, TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user, bool $respectWorkspaceRestrictions = true)

      Return the requested (main) module if exist and allowed, prepared
      for menu generation or similar structured output (nested). Takes
      TSConfig into account. Does not respect "appearance[renderInModuleMenu]".

      :param string $identifier: the identifier
      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user
      :param bool $respectWorkspaceRestrictions: the respectWorkspaceRestrictions, default: true
      :returntype: `TYPO3\CMS\Backend\Module\MenuModule`

   .. php:method:: getModulesForModuleMenu(TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user, bool $respectWorkspaceRestrictions = true)

      Returns all allowed modules for the current user, prepared
      for module menu generation or similar structured output (nested).

      Takes TSConfig and "appearance[renderInModuleMenu]" into account.

      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user
      :param bool $respectWorkspaceRestrictions: the respectWorkspaceRestrictions, default: true
      :returntype: `array`
      :returns: \MenuModule[]

   .. php:method:: accessGranted(string $identifier, TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user, bool $respectWorkspaceRestrictions = true)

      Check access of a module for a given user

      :param string $identifier: the identifier
      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user
      :param bool $respectWorkspaceRestrictions: the respectWorkspaceRestrictions, default: true
      :returntype: `bool`
