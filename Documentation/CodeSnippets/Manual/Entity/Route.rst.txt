.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
.. php:namespace::  TYPO3\CMS\Backend\Routing

.. php:class:: Route

   This is a single entity for a Route.

   The architecture is highly inspired by the Symfony Routing Component.

   .. php:method:: getPath()

      Returns the path

   .. php:method:: setPath(string $pattern)

      Sets the pattern for the path
      A pattern must start with a slash and must not have multiple slashes at the beginning because the
      generated path for this route would be confused with a network path, e.g. '//domain.com/path'.

      This method implements a fluent interface.

      :param string $pattern: The path pattern

   .. php:method:: getMethods()

      Returns the uppercased HTTP methods this route is restricted to.

      An empty array means that any method is allowed.

      :returntype: `array`
      :returns: string[] The methods

   .. php:method:: setMethods(array $methods)

      Sets the HTTP methods (e.g. ['POST']) this route is restricted to.

      An empty array means that any method is allowed.

      This method implements a fluent interface.

      :param array $methods: The array of allowed methods
      :returntype: `self`

   .. php:method:: getOptions()

      Returns the options set

   .. php:method:: setOptions(array $options)

      Sets the options

      This method implements a fluent interface.

      :param array $options: The options

   .. php:method:: setOption(string $name, mixed $value)

      Sets an option value

      This method implements a fluent interface.

      :param string $name: An option name
      :param mixed $value: The option value

   .. php:method:: getOption(string $name)

      Get an option value

      :param string $name: An option name

   .. php:method:: hasOption(string $name)

      Checks if an option has been set

      :param string $name: An option name
