.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
.. php:namespace::  TYPO3\CMS\Core\Site\Entity

.. php:class:: Site

   Entity representing a single site with available languages

   .. php:method:: getIdentifier()

      Gets the identifier of this site,
      mainly used when maintaining / configuring sites.

      :returntype: string

   .. php:method:: getBase()

      Returns the base URL of this site

      :returntype: Psr\\Http\\Message\\UriInterface

   .. php:method:: getRootPageId()

      Returns the root page ID of this site

      :returntype: int

   .. php:method:: getLanguages()

      :returntype: array

   .. php:method:: getAllLanguages()

      :returntype: array

   .. php:method:: getLanguageById(int $languageId)

      Returns a language of this site, given by the sys_language_uid

      :param int $languageId: the languageId
      :returntype: TYPO3\\CMS\\Core\\Site\\Entity\\SiteLanguage

   .. php:method:: getDefaultLanguage()

      :returntype: TYPO3\\CMS\\Core\\Site\\Entity\\SiteLanguage

   .. php:method:: getAvailableLanguages(TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user, bool $includeAllLanguagesFlag = false, int $pageId = NULL)

      :param TYPO3\\CMS\\Core\\Authentication\\BackendUserAuthentication $user: the user
      :param bool $includeAllLanguagesFlag: the includeAllLanguagesFlag, default: false
      :param int $pageId: the pageId, default: NULL
      :returntype: array

   .. php:method:: getErrorHandler(int $statusCode)

      Returns a ready-to-use error handler, to be used within the ErrorController

      :param int $statusCode: the statusCode
      :returntype: TYPO3\\CMS\\Core\\Error\\PageErrorHandler\\PageErrorHandlerInterface

   .. php:method:: getConfiguration()

      Returns the whole configuration for this site

      :returntype: array

   .. php:method:: getSettings()

      :returntype: TYPO3\\CMS\\Core\\Site\\Entity\\SiteSettings

   .. php:method:: getAttribute(string $attributeName)

      Returns a single configuration attribute

      :param string $attributeName: the attributeName

   .. php:method:: getRouter(TYPO3\\CMS\\Core\\Context\\Context $context = NULL)

      Returns the applicable router for this site. This might be configurable in the future.

      :param TYPO3\\CMS\\Core\\Context\\Context $context: the context, default: NULL
      :returntype: TYPO3\\CMS\\Core\\Routing\\RouterInterface
