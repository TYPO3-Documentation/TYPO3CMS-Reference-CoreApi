..  Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
..  php:namespace::  TYPO3\CMS\Backend\Module

..  php:class:: ModuleData

    A simple DTO containing the user specific module settings, e.g. whether the clipboard is shown.

    The DTO is created in the PSR-15 middleware BackendModuleValidator, in case a backend module
    is requested and the user has necessary access permissions. The created DTO is then added as
    attribute to the PSR-7 Request and can be further used in components, such as middlewares or
    the route target (usually a backend controller).

    ..  php:method:: createFromModule(TYPO3\CMS\Backend\Module\ModuleInterface $module, array $data)
        :returns: self

        :param $module: the module
        :param $data: the data

    ..  php:method:: getModuleIdentifier()
        :returns: string

    ..  php:method:: get(string $propertyName, ?mixed $default = NULL)
        :returns: ?mixed

        :param $propertyName: the propertyName
        :param $default: the default, default: NULL

    ..  php:method:: has(string $propertyName)
        :returns: bool

        :param $propertyName: the propertyName

    ..  php:method:: set(string $propertyName, ?mixed $value)

        :param $propertyName: the propertyName
        :param $value: the value

    ..  php:method:: clean(string $propertyName, array $allowedValues)
        :returns: bool True if something has been cleaned up

        Cleans a single property by the given allowed list. First fallback
        is the default data list. If this list does also not contain an
        allowed value, the first value from the allowed list is taken.

        :param $propertyName: the propertyName
        :param $allowedValues: the allowedValues

    ..  php:method:: cleanUp(array $allowedData, bool $useKeys = true)
        :returns: bool

        Cleans up all module data, which are defined in the
        given allowed data list. Usually called with $MOD_MENU.

        :param $allowedData: the allowedData
        :param $useKeys: the useKeys, default: true

    ..  php:method:: toArray()
        :returns: array
