.. Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
.. php:namespace::  TYPO3\CMS\Core\TypoScript

.. php:class:: FrontendTypoScript

   This class contains the TypoScript set up by the PrepareTypoScriptFrontendRendering
   Frontend middleware. It can be accessed in content objects:

   $frontendTypoScript = $request->getAttribute('frontend.typoscript');

   .. php:method:: getFlatSettings()

      This is *always* set up by the middleware: Current settings (aka "TypoScript constants")
      are needed for page cache identifier calculation.

      This is a "flattened" array of all settings, as example, consider these settings TypoScript:

      ..  code-block:: php

          mySettings {
              foo = fooValue
              bar = barValue
          }

      This will result in this array:

      ..  code-block:: php

          $flatSettings = [
              'mySettings.foo' => 'fooValue',
              'mySettings.bar' => 'barValue',
          ];

      :returntype: `array`

   .. php:method:: hasSetup()

      When a page is retrieved from cache and does not contain COA_INT or USER_INT objects,
      Frontend TypoScript setup is not calculated, so the AST and the array are not set.

      Calling getSetupTree() or getSetupArray() will then throw an exception.

      To avoid the exception, consumers can call hasSetup() beforehand.

      Note casual content objects do not need to do this, since setup TypoScript is always
      set up when content objects need to be calculated.

      :returntype: `bool`

   .. php:method:: getSetupArray()

      The full Frontend TypoScript array.

      This is always set up as soon as the Frontend rendering needs to actually render something and
      can not get the full content from page cache. This is the case when a page cache entry does
      not exist, or when the page contains COA_INT or USER_INT objects.

      :returntype: `array`

   .. php:method:: getConfigArray()

      The merged TypoScript 'config'.

      This is the result of the "global" TypoScript 'config' section, merged with
      the 'config' section of the determined PAGE object which can override
      "global" 'config' per type / typeNum.

      :returntype: `array`
