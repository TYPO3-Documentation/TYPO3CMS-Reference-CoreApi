..  Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
..  php:namespace::  TYPO3\CMS\Core\Domain\Event

..  php:class:: RecordCreationEvent

    Event which allows to manipulate the properties to be used for a new Record.

    With this event, it's even possible to create a new Record manually.

    ..  php:method:: setRecord(\TYPO3\CMS\Core\Domain\RecordInterface $record)

        :param $record: the record

    ..  php:method:: isPropagationStopped()
        :returns: `bool`

    ..  php:method:: hasProperty(string $name)
        :returns: `bool`

        :param $name: the name

    ..  php:method:: setProperty(string $name, ?mixed $propertyValue)

        :param $name: the name
        :param $propertyValue: the propertyValue

    ..  php:method:: setProperties(array $properties)

        :param $properties: the properties

    ..  php:method:: unsetProperty(string $name)
        :returns: `bool`

        :param $name: the name

    ..  php:method:: getProperty(string $name)
        :returns: `?mixed`

        :param $name: the name

    ..  php:method:: getProperties()
        :returns: `array`

    ..  php:method:: getRawRecord()
        :returns: `\TYPO3\CMS\Core\Domain\RawRecord`

    ..  php:method:: getSystemProperties()
        :returns: `\TYPO3\CMS\Core\Domain\Record\SystemProperties`

    ..  php:method:: getContext()
        :returns: `\TYPO3\CMS\Core\Context\Context`

    ..  php:method:: getRecordIdentityMap()
        :returns: `\TYPO3\CMS\Core\Domain\Persistence\RecordIdentityMap`

    ..  php:method:: getSchema()
        :returns: `\TYPO3\CMS\Core\Schema\TcaSchema`

        If available this is the subSchema for the current record type
