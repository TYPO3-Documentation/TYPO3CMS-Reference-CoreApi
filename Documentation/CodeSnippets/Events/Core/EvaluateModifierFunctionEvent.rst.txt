..  Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
..  php:namespace::  TYPO3\CMS\Core\TypoScript\AST\Event

..  php:class:: EvaluateModifierFunctionEvent

    Listeners to this event are able to implement own ":=" TypoScript modifier functions, example:

    foo = myOriginalValue
    foo := myNewFunction(myFunctionArgument)

    Listeners should take care function names can not overlap with function names
    from other extensions and should thus namespace, example naming: "extNewsSortFunction()"

    ..  php:method:: getFunctionName()
        :returns: `string`

        The function name, for example "extNewsSortFunction" when using "foo := extNewsSortFunction()"

    ..  php:method:: getFunctionArgument()
        :returns: `?string`

        Optional function argument, for example "myArgument" when using "foo := extNewsSortFunction(myArgument)"

    ..  php:method:: getOriginalValue()
        :returns: `?string`

        Original / current value, for example "fooValue" when using:
        foo = fooValue
        foo := extNewsSortFunction(myArgument)

    ..  php:method:: setValue(string $value)

        Set the updated value calculated by a listener.

        Note you can not set to null to "unset", since getValue() falls back to
        originalValue in this case. Set to empty string instead for this edge case.

        :param $value: the value

    ..  php:method:: getValue()
        :returns: `?string`

        Used by AstBuilder to fetch the updated value, falls back to given original value.

        Can be used by Listeners to see if a previous listener changed the value already
        by comparing with getOriginalValue().

