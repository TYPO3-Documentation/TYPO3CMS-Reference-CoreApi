..  Generated by https://github.com/TYPO3-Documentation/t3docs-codesnippets
..  Extracted from T3docs\Examples\Controller\ModuleController

..  code-block:: php
    :caption: Class T3docs\\Examples\\Controller\\ModuleController

    use Psr\Http\Message\ResponseInterface;
    use Psr\Http\Message\UriInterface;
    use Psr\Log\LoggerInterface;
    use T3docs\Examples\Service\TableInformationService;
    use TYPO3\CMS\Backend\Routing\UriBuilder;
    use TYPO3\CMS\Backend\Template\ModuleTemplateFactory;
    use TYPO3\CMS\Core\Configuration\ExtensionConfiguration;
    use TYPO3\CMS\Core\Crypto\PasswordHashing\PasswordHashFactory;
    use TYPO3\CMS\Core\Database\ConnectionPool;
    use TYPO3\CMS\Core\Imaging\IconFactory;
    use TYPO3\CMS\Core\Resource\FileRepository;
    use TYPO3\CMS\Core\Resource\ResourceFactory;

    class ModuleController extends ActionController
    {
        public function linksAction(): ResponseInterface
        {
            $pageUid = (int)($this->request->getQueryParams()['id'] ?? 0);
            $returnUrl = (string)$this->backendUriBuilder->buildUriFromRoute(
                'web_examples',
                ['id' => $pageUid, 'action' => 'links'],
            );

            $editPage1Link = $this->getEditPageLink(1, $returnUrl);
            $editPagesDoktypeLink = $this->getEditDoktypeLink($returnUrl);
            $createHaikuLink = $this->getCreateHaikuLink($returnUrl);

            $view = $this->initializeModuleTemplate($this->request);
            $view->assignMultiple(
                [
                    'editPage1Link' => $editPage1Link,
                    'editPagesDoktypeLink' => $editPagesDoktypeLink,
                    'createHaikuLink' => $createHaikuLink,
                    'returnUrl' => $returnUrl,
                ],
            );
            return $view->renderResponse();
        }

        private function getEditPageLink(int $uid, string $returnUrl): UriInterface
        {
            $uriParameters = [
                'edit' => [
                    'pages' => [
                        $uid => 'edit',
                    ],
                ],
                'returnUrl' => $returnUrl,
            ];
            return $this->backendUriBuilder->buildUriFromRoute(
                'record_edit',
                $uriParameters,
            );
        }

        public function __construct(
            protected readonly ModuleTemplateFactory $moduleTemplateFactory,
            protected readonly IconFactory $iconFactory,
            protected readonly ExtensionConfiguration $extensionConfiguration,
            protected readonly PasswordHashFactory $passwordHashFactory,
            protected readonly ResourceFactory $resourceFactory,
            protected readonly FileRepository $fileRepository,
            protected readonly ConnectionPool $connectionPool,
            protected readonly TableInformationService $tableInformationService,
            protected readonly LoggerInterface $logger,
            protected readonly UriBuilder $backendUriBuilder,
        ) {}
    }
    